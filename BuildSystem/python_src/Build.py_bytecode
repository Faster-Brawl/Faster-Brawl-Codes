./Build.pyc (Python 3.9)
[Code]
    File Name: Build.py
    Object Name: <module>
    Arg Count: 0
    Pos Only Arg Count: 0
    KW Only Arg Count: 0
    Locals: 0
    Stack Size: 5
    Flags: 0x00000040 (CO_NOFREE)
    [Names]
        'sys'
        'os'
        're'
        'SetEnvironment'
        'setEnvironment'
        'LibraryDirectory'
        'Library'
        'InitialSectionNameLibrary'
        'File'
        'FinalSectionNameLibrary'
        'Compiler'
        'Settings'
        'SegmentManager'
        'Symbol'
        'itertools'
        'chain'
        'BinUtils'
        'objdump'
        'math'
        'ceil'
        'renamedCodesDir'
        'removedConstructorsDir'
        'disassemblyDir'
        'symbolMapFile'
        '__annotations__'
        'build'
        'renameSections'
        'makeCodesCPPFile'
        'makeInitCPPFile'
        'getDebugInfo'
        'makeMap'
        'list'
        'makeFilesFile'
        'extractFiles'
        'int'
        'makeInitializerInfo'
        'makeMemoryHeapInfo'
        'makeStartupsInfo'
        'makeStringWriteInfo'
        'makeDataWriteInfo'
        'makeInjectionsInfo'
        '__name__'
        'show_exception_and_exit'
        'excepthook'
        'argv'
    [Var Names]
    [Free Vars]
    [Cell Vars]
    [Constants]
        0
        None
        (
            'setEnvironment'
        )
        (
            'LibraryDirectory'
        )
        (
            'Library'
            'InitialSectionNameLibrary'
            'File'
            'FinalSectionNameLibrary'
        )
        (
            'Compiler'
        )
        (
            '*'
        )
        (
            'SegmentManager'
        )
        (
            'Symbol'
        )
        (
            'chain'
        )
        (
            'objdump'
        )
        (
            'ceil'
        )
        'IntermediateFiles\\Renamed'
        'IntermediateFiles\\Removed'
        'Disassembly'
        'symbolMapFile'
        [Code]
            File Name: Build.py
            Object Name: build
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 20
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'File'
                'os'
                'path'
                'abspath'
                'symbolMapFile'
                'exists'
                'AssertionError'
                'getcwd'
                'setEnvironment'
                'LibraryDirectory'
                'InitialSectionNameLibrary'
                'renameSections'
                'removeSections'
                'removedConstructorsDir'
                'Compiler'
                'makeCodesCPPFile'
                'symbols'
                'compile'
                'libraries'
                'sections'
                'SegmentManager'
                'assignFunctionAddresses'
                'codeSegments'
                'list'
                'chain'
                'from_iterable'
                'makeInitCPPFile'
                'INITIALIZER_SEGMENT_ADDRESS'
                'DATA_SEGMENT_ADDRESS'
                'FinalSectionNameLibrary'
                'address'
                'hex'
                'assignExtraAddresses'
                'getDebugInfo'
                'extractFiles'
                'makeFilesFile'
                'writeBinary'
            [Var Names]
                'buildDir'
                'codesDir'
                'ppcBinDirectory'
                'brawlFuncMapPath'
                'inputCodesDirectoryObject'
                'renamedCodesDirectoryObject'
                'removedConstructorsDirectoryObject'
                'compiler'
                'cppFile'
                'linkedCodes'
                'functions'
                'segments'
                'temp'
                'codeSections'
                'initFile'
                'compiledCodes'
                's'
                'files'
                'data'
                'f'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'BrawlFuncMap.map'
                'Cannot find function map at '
                '/Build'
                'Codes9'
                (
                    'libraryType'
                )
                '.ctors'
                '.dtors'
                0x80000000L
                (
                    'textStart'
                )
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'type'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'text'
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                18 (to 24)
                        6       STORE_FAST              1: s
                        8       LOAD_FAST               1: s
                        10      LOAD_ATTR               0: type
                        12      LOAD_CONST              0: 'text'
                        14      COMPARE_OP              2 (==)
                        16      POP_JUMP_IF_FALSE       4
                        18      LOAD_FAST               1: s
                        20      LIST_APPEND             2
                        22      JUMP_ABSOLUTE           4
                        24      RETURN_VALUE            
                'build.<locals>.<listcomp>'
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'sections'
                    [Var Names]
                        '.0'
                        'segment'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                10 (to 16)
                        6       STORE_FAST              1: segment
                        8       LOAD_FAST               1: segment
                        10      LOAD_ATTR               0: sections
                        12      LIST_APPEND             2
                        14      JUMP_ABSOLUTE           4
                        16      RETURN_VALUE            
                (
                    'textStart'
                    'dataStart'
                    'sections'
                )
                0xA0000000L
                ', address: '
                ' out of acceptable range'
                'Output/files'
            [Disassembly]
                0       LOAD_FAST               3: brawlFuncMapPath
                2       LOAD_CONST              0: None
                4       COMPARE_OP              8 (is)
                6       POP_JUMP_IF_FALSE       12
                8       LOAD_CONST              1: 'BrawlFuncMap.map'
                10      STORE_FAST              3: brawlFuncMapPath
                12      LOAD_GLOBAL             0: File
                14      LOAD_GLOBAL             1: os
                16      LOAD_ATTR               2: path
                18      LOAD_METHOD             3: abspath
                20      LOAD_FAST               3: brawlFuncMapPath
                22      CALL_METHOD             1
                24      CALL_FUNCTION           1
                26      STORE_GLOBAL            4: symbolMapFile
                28      LOAD_GLOBAL             4: symbolMapFile
                30      LOAD_METHOD             5: exists
                32      CALL_METHOD             0
                34      POP_JUMP_IF_TRUE        52
                36      LOAD_GLOBAL             6: AssertionError
                38      LOAD_CONST              2: 'Cannot find function map at '
                40      LOAD_GLOBAL             4: symbolMapFile
                42      LOAD_ATTR               2: path
                44      FORMAT_VALUE            0
                46      BUILD_STRING            2
                48      CALL_FUNCTION           1
                50      RAISE_VARARGS           1
                52      LOAD_FAST               0: buildDir
                54      LOAD_CONST              0: None
                56      COMPARE_OP              8 (is)
                58      POP_JUMP_IF_FALSE       74
                60      LOAD_GLOBAL             1: os
                62      LOAD_METHOD             7: getcwd
                64      CALL_METHOD             0
                66      FORMAT_VALUE            0
                68      LOAD_CONST              3: '/Build'
                70      BUILD_STRING            2
                72      STORE_FAST              0: buildDir
                74      LOAD_GLOBAL             8: setEnvironment
                76      LOAD_FAST               0: buildDir
                78      LOAD_FAST               2: ppcBinDirectory
                80      CALL_FUNCTION           2
                82      POP_TOP                 
                84      LOAD_FAST               1: codesDir
                86      LOAD_CONST              0: None
                88      COMPARE_OP              8 (is)
                90      POP_JUMP_IF_FALSE       96
                92      LOAD_CONST              4: 'Codes9'
                94      STORE_FAST              1: codesDir
                96      LOAD_GLOBAL             9: LibraryDirectory
                98      LOAD_FAST               1: codesDir
                100     LOAD_GLOBAL             10: InitialSectionNameLibrary
                102     LOAD_CONST              5: ('libraryType',)
                104     CALL_FUNCTION_KW        2
                106     STORE_FAST              4: inputCodesDirectoryObject
                108     LOAD_GLOBAL             11: renameSections
                110     LOAD_FAST               4: inputCodesDirectoryObject
                112     CALL_FUNCTION           1
                114     STORE_FAST              5: renamedCodesDirectoryObject
                116     LOAD_FAST               5: renamedCodesDirectoryObject
                118     LOAD_METHOD             12: removeSections
                120     LOAD_CONST              6: '.ctors'
                122     LOAD_CONST              7: '.dtors'
                124     BUILD_LIST              2
                126     LOAD_GLOBAL             13: removedConstructorsDir
                128     CALL_METHOD             2
                130     STORE_FAST              6: removedConstructorsDirectoryObject
                132     LOAD_GLOBAL             14: Compiler
                134     CALL_FUNCTION           0
                136     STORE_FAST              7: compiler
                138     LOAD_GLOBAL             15: makeCodesCPPFile
                140     LOAD_FAST               6: removedConstructorsDirectoryObject
                142     LOAD_ATTR               16: symbols
                144     CALL_FUNCTION           1
                146     STORE_FAST              8: cppFile
                148     LOAD_FAST               7: compiler
                150     LOAD_ATTR               17: compile
                152     LOAD_FAST               8: cppFile
                154     LOAD_FAST               6: removedConstructorsDirectoryObject
                156     LOAD_ATTR               18: libraries
                158     LOAD_CONST              8: 0x80000000L
                160     LOAD_CONST              9: ('textStart',)
                162     CALL_FUNCTION_KW        3
                164     STORE_FAST              9: linkedCodes
                166     LOAD_CONST              10: <CODE> <listcomp>
                168     LOAD_CONST              11: 'build.<locals>.<listcomp>'
                170     MAKE_FUNCTION           0
                172     LOAD_FAST               9: linkedCodes
                174     LOAD_ATTR               19: sections
                176     GET_ITER                
                178     CALL_FUNCTION           1
                180     STORE_FAST              10: functions
                182     LOAD_GLOBAL             20: SegmentManager
                184     CALL_FUNCTION           0
                186     STORE_FAST              11: segments
                188     LOAD_FAST               11: segments
                190     LOAD_METHOD             21: assignFunctionAddresses
                192     LOAD_FAST               10: functions
                194     CALL_METHOD             1
                196     POP_TOP                 
                198     LOAD_CONST              12: <CODE> <listcomp>
                200     LOAD_CONST              11: 'build.<locals>.<listcomp>'
                202     MAKE_FUNCTION           0
                204     LOAD_FAST               11: segments
                206     LOAD_ATTR               22: codeSegments
                208     GET_ITER                
                210     CALL_FUNCTION           1
                212     STORE_FAST              12: temp
                214     LOAD_GLOBAL             23: list
                216     LOAD_GLOBAL             24: chain
                218     LOAD_METHOD             25: from_iterable
                220     LOAD_FAST               12: temp
                222     CALL_METHOD             1
                224     CALL_FUNCTION           1
                226     STORE_FAST              13: codeSections
                228     LOAD_GLOBAL             26: makeInitCPPFile
                230     LOAD_FAST               6: removedConstructorsDirectoryObject
                232     LOAD_ATTR               16: symbols
                234     CALL_FUNCTION           1
                236     STORE_FAST              14: initFile
                238     LOAD_FAST               7: compiler
                240     LOAD_ATTR               17: compile
                242     LOAD_FAST               14: initFile
                244     LOAD_FAST               5: renamedCodesDirectoryObject
                246     LOAD_ATTR               18: libraries
                248     LOAD_GLOBAL             27: INITIALIZER_SEGMENT_ADDRESS
                250     LOAD_GLOBAL             28: DATA_SEGMENT_ADDRESS
                252     LOAD_FAST               13: codeSections
                254     LOAD_CONST              13: ('textStart', 'dataStart', 'sections')
                256     CALL_FUNCTION_KW        5
                258     STORE_FAST              15: compiledCodes
                260     LOAD_GLOBAL             29: FinalSectionNameLibrary
                262     LOAD_FAST               15: compiledCodes
                264     LOAD_ATTR               2: path
                266     CALL_FUNCTION           1
                268     STORE_FAST              15: compiledCodes
                270     LOAD_FAST               15: compiledCodes
                272     LOAD_ATTR               19: sections
                274     GET_ITER                
                276     FOR_ITER                60 (to 338)
                278     STORE_FAST              16: s
                280     LOAD_CONST              8: 0x80000000L
                282     LOAD_FAST               16: s
                284     LOAD_ATTR               30: address
                286     DUP_TOP                 
                288     ROT_THREE               
                290     COMPARE_OP              1 (<=)
                292     POP_JUMP_IF_FALSE       306
                296     LOAD_CONST              14: 0xA0000000L
                298     COMPARE_OP              1 (<=)
                300     POP_JUMP_IF_TRUE        276
                304     JUMP_FORWARD            2 (to 308)
                306     POP_TOP                 
                308     LOAD_GLOBAL             6: AssertionError
                310     LOAD_FAST               16: s
                312     FORMAT_VALUE            0
                314     LOAD_CONST              15: ', address: '
                316     LOAD_GLOBAL             31: hex
                318     LOAD_FAST               16: s
                320     LOAD_ATTR               30: address
                322     CALL_FUNCTION           1
                324     FORMAT_VALUE            0
                326     LOAD_CONST              16: ' out of acceptable range'
                328     BUILD_STRING            4
                330     CALL_FUNCTION           1
                332     RAISE_VARARGS           1
                334     JUMP_ABSOLUTE           276
                338     LOAD_FAST               11: segments
                340     LOAD_METHOD             32: assignExtraAddresses
                342     LOAD_FAST               15: compiledCodes
                344     LOAD_ATTR               19: sections
                346     CALL_METHOD             1
                348     POP_TOP                 
                350     LOAD_GLOBAL             33: getDebugInfo
                352     LOAD_FAST               15: compiledCodes
                354     LOAD_FAST               11: segments
                356     CALL_FUNCTION           2
                358     POP_TOP                 
                360     LOAD_GLOBAL             34: extractFiles
                362     LOAD_FAST               15: compiledCodes
                364     LOAD_FAST               11: segments
                366     CALL_FUNCTION           2
                368     STORE_FAST              17: files
                370     LOAD_GLOBAL             35: makeFilesFile
                372     LOAD_FAST               15: compiledCodes
                374     LOAD_FAST               17: files
                376     CALL_FUNCTION           2
                378     STORE_FAST              18: data
                380     LOAD_GLOBAL             0: File
                382     LOAD_CONST              17: 'Output/files'
                384     CALL_FUNCTION           1
                386     STORE_FAST              19: f
                388     LOAD_FAST               19: f
                390     LOAD_METHOD             36: writeBinary
                392     LOAD_FAST               18: data
                394     CALL_METHOD             1
                396     POP_TOP                 
                398     LOAD_CONST              0: None
                400     RETURN_VALUE            
        'build'
        (
            'codesDirectory'
        )
        [Code]
            File Name: Build.py
            Object Name: renameSections
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 3
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'sections'
                'name'
                'replace'
                'type'
                'renameSections'
                'renamedCodesDir'
            [Var Names]
                'codesDirectory'
                'name2NewName'
                's'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '.'
                ''
                '__'
            [Disassembly]
                0       BUILD_MAP               0
                2       STORE_FAST              1: name2NewName
                4       LOAD_FAST               0: codesDirectory
                6       LOAD_ATTR               0: sections
                8       GET_ITER                
                10      FOR_ITER                48 (to 60)
                12      STORE_FAST              2: s
                14      LOAD_FAST               2: s
                16      LOAD_ATTR               1: name
                18      LOAD_METHOD             2: replace
                20      LOAD_CONST              1: '.'
                22      LOAD_FAST               2: s
                24      LOAD_ATTR               3: type
                26      FORMAT_VALUE            0
                28      LOAD_CONST              1: '.'
                30      BUILD_STRING            3
                32      LOAD_CONST              2: ''
                34      CALL_METHOD             2
                36      LOAD_CONST              3: '__'
                38      LOAD_FAST               2: s
                40      LOAD_ATTR               3: type
                42      FORMAT_VALUE            0
                44      LOAD_CONST              3: '__'
                46      BUILD_STRING            3
                48      BINARY_ADD              
                50      LOAD_FAST               1: name2NewName
                52      LOAD_FAST               2: s
                54      LOAD_ATTR               1: name
                56      STORE_SUBSCR            
                58      JUMP_ABSOLUTE           10
                60      LOAD_FAST               0: codesDirectory
                62      LOAD_METHOD             4: renameSections
                64      LOAD_FAST               1: name2NewName
                66      LOAD_GLOBAL             5: renamedCodesDir
                68      CALL_METHOD             2
                70      RETURN_VALUE            
        'renameSections'
        [Code]
            File Name: Build.py
            Object Name: makeCodesCPPFile
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 7
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isInjection'
                'append'
                'join'
                'format'
                'File'
                'write'
            [Var Names]
                'symbols'
                'cppFormat'
                'injections'
                's'
                'branches'
                'cppText'
                'cppFile'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '\n    asm(R"(.globl _start\n    _start:\n        {codeBranches}\n    )");\n    '
                '\n\t\t'
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        '.0'
                        'i'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'b '
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                16 (to 22)
                        6       STORE_FAST              1: i
                        8       LOAD_CONST              0: 'b '
                        10      LOAD_FAST               1: i
                        12      LOAD_ATTR               0: name
                        14      FORMAT_VALUE            0
                        16      BUILD_STRING            2
                        18      LIST_APPEND             2
                        20      JUMP_ABSOLUTE           4
                        22      RETURN_VALUE            
                'makeCodesCPPFile.<locals>.<listcomp>'
                (
                    'codeBranches'
                )
                'IntermediateFiles/cppFile.cpp'
            [Disassembly]
                0       LOAD_CONST              1: '\n    asm(R"(.globl _start\n    _start:\n        {codeBranches}\n    )");\n    '
                2       STORE_FAST              1: cppFormat
                4       BUILD_LIST              0
                6       STORE_FAST              2: injections
                8       LOAD_FAST               0: symbols
                10      GET_ITER                
                12      FOR_ITER                22 (to 36)
                14      STORE_FAST              3: s
                16      LOAD_FAST               3: s
                18      LOAD_METHOD             0: isInjection
                20      CALL_METHOD             0
                22      POP_JUMP_IF_FALSE       12
                24      LOAD_FAST               2: injections
                26      LOAD_METHOD             1: append
                28      LOAD_FAST               3: s
                30      CALL_METHOD             1
                32      POP_TOP                 
                34      JUMP_ABSOLUTE           12
                36      LOAD_CONST              2: '\n\t\t'
                38      LOAD_METHOD             2: join
                40      LOAD_CONST              3: <CODE> <listcomp>
                42      LOAD_CONST              4: 'makeCodesCPPFile.<locals>.<listcomp>'
                44      MAKE_FUNCTION           0
                46      LOAD_FAST               2: injections
                48      GET_ITER                
                50      CALL_FUNCTION           1
                52      CALL_METHOD             1
                54      STORE_FAST              4: branches
                56      LOAD_FAST               1: cppFormat
                58      LOAD_ATTR               3: format
                60      LOAD_FAST               4: branches
                62      LOAD_CONST              5: ('codeBranches',)
                64      CALL_FUNCTION_KW        1
                66      STORE_FAST              5: cppText
                68      LOAD_GLOBAL             4: File
                70      LOAD_CONST              6: 'IntermediateFiles/cppFile.cpp'
                72      CALL_FUNCTION           1
                74      STORE_FAST              6: cppFile
                76      LOAD_FAST               6: cppFile
                78      LOAD_METHOD             5: write
                80      LOAD_FAST               5: cppText
                82      CALL_METHOD             1
                84      POP_TOP                 
                86      LOAD_FAST               6: cppFile
                88      RETURN_VALUE            
        'makeCodesCPPFile'
        [Code]
            File Name: Build.py
            Object Name: makeInitCPPFile
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 4
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'isInjection'
                'isStartup'
                'append'
                'join'
                'name'
                'startswith'
                'partition'
                'format'
                'File'
                'write'
            [Var Names]
                'symbols'
                'initFormat'
                'injections'
                's'
                'branches'
                'writes'
                'name'
                'initText'
                'initFile'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '\n        asm(R"(.globl _start\n        _start:\n            b _INITIALIZE_\n            {codeBranches}\n            {writes}\n        )");\n        '
                '\n\t\t'
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        '.0'
                        'i'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'b '
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                16 (to 22)
                        6       STORE_FAST              1: i
                        8       LOAD_CONST              0: 'b '
                        10      LOAD_FAST               1: i
                        12      LOAD_ATTR               0: name
                        14      FORMAT_VALUE            0
                        16      BUILD_STRING            2
                        18      LIST_APPEND             2
                        20      JUMP_ABSOLUTE           4
                        22      RETURN_VALUE            
                'makeInitCPPFile.<locals>.<listcomp>'
                '_STRING_WRITE_'
                '_DATA_WRITE_'
                '/'
                0
                [Code]
                    File Name: Build.py
                    Object Name: <genexpr>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 3
                    Flags: 0x00000073 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_GENERATOR | CO_NOFREE)
                    [Names]
                    [Var Names]
                        '.0'
                        'w'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        'b '
                        None
                    [Disassembly]
                        0       LOAD_FAST               0: .0
                        2       FOR_ITER                16 (to 20)
                        4       STORE_FAST              1: w
                        6       LOAD_CONST              0: 'b '
                        8       LOAD_FAST               1: w
                        10      FORMAT_VALUE            0
                        12      BUILD_STRING            2
                        14      YIELD_VALUE             
                        16      POP_TOP                 
                        18      JUMP_ABSOLUTE           2
                        20      LOAD_CONST              1: None
                        22      RETURN_VALUE            
                'makeInitCPPFile.<locals>.<genexpr>'
                (
                    'codeBranches'
                    'writes'
                )
                'IntermediateFiles/initFile.cpp'
            [Disassembly]
                0       LOAD_CONST              1: '\n        asm(R"(.globl _start\n        _start:\n            b _INITIALIZE_\n            {codeBranches}\n            {writes}\n        )");\n        '
                2       STORE_FAST              1: initFormat
                4       BUILD_LIST              0
                6       STORE_FAST              2: injections
                8       LOAD_FAST               0: symbols
                10      GET_ITER                
                12      FOR_ITER                30 (to 44)
                14      STORE_FAST              3: s
                16      LOAD_FAST               3: s
                18      LOAD_METHOD             0: isInjection
                20      CALL_METHOD             0
                22      POP_JUMP_IF_TRUE        32
                24      LOAD_FAST               3: s
                26      LOAD_METHOD             1: isStartup
                28      CALL_METHOD             0
                30      POP_JUMP_IF_FALSE       12
                32      LOAD_FAST               2: injections
                34      LOAD_METHOD             2: append
                36      LOAD_FAST               3: s
                38      CALL_METHOD             1
                40      POP_TOP                 
                42      JUMP_ABSOLUTE           12
                44      LOAD_CONST              2: '\n\t\t'
                46      LOAD_METHOD             3: join
                48      LOAD_CONST              3: <CODE> <listcomp>
                50      LOAD_CONST              4: 'makeInitCPPFile.<locals>.<listcomp>'
                52      MAKE_FUNCTION           0
                54      LOAD_FAST               2: injections
                56      GET_ITER                
                58      CALL_FUNCTION           1
                60      CALL_METHOD             1
                62      STORE_FAST              4: branches
                64      BUILD_LIST              0
                66      STORE_FAST              5: writes
                68      LOAD_FAST               0: symbols
                70      GET_ITER                
                72      FOR_ITER                54 (to 128)
                74      STORE_FAST              3: s
                76      LOAD_FAST               3: s
                78      LOAD_ATTR               4: name
                80      LOAD_METHOD             5: startswith
                82      LOAD_CONST              5: '_STRING_WRITE_'
                84      CALL_METHOD             1
                86      POP_JUMP_IF_TRUE        100
                88      LOAD_FAST               3: s
                90      LOAD_ATTR               4: name
                92      LOAD_METHOD             5: startswith
                94      LOAD_CONST              6: '_DATA_WRITE_'
                96      CALL_METHOD             1
                98      POP_JUMP_IF_FALSE       72
                100     LOAD_FAST               3: s
                102     LOAD_ATTR               4: name
                104     LOAD_METHOD             6: partition
                106     LOAD_CONST              7: '/'
                108     CALL_METHOD             1
                110     LOAD_CONST              8: 0
                112     BINARY_SUBSCR           
                114     STORE_FAST              6: name
                116     LOAD_FAST               5: writes
                118     LOAD_METHOD             2: append
                120     LOAD_FAST               6: name
                122     CALL_METHOD             1
                124     POP_TOP                 
                126     JUMP_ABSOLUTE           72
                128     LOAD_CONST              2: '\n\t\t'
                130     LOAD_METHOD             3: join
                132     LOAD_CONST              9: <CODE> <genexpr>
                134     LOAD_CONST              10: 'makeInitCPPFile.<locals>.<genexpr>'
                136     MAKE_FUNCTION           0
                138     LOAD_FAST               5: writes
                140     GET_ITER                
                142     CALL_FUNCTION           1
                144     CALL_METHOD             1
                146     STORE_FAST              5: writes
                148     LOAD_FAST               1: initFormat
                150     LOAD_ATTR               7: format
                152     LOAD_FAST               4: branches
                154     LOAD_FAST               5: writes
                156     LOAD_CONST              11: ('codeBranches', 'writes')
                158     CALL_FUNCTION_KW        2
                160     STORE_FAST              7: initText
                162     LOAD_GLOBAL             8: File
                164     LOAD_CONST              12: 'IntermediateFiles/initFile.cpp'
                166     CALL_FUNCTION           1
                168     STORE_FAST              8: initFile
                170     LOAD_FAST               8: initFile
                172     LOAD_METHOD             9: write
                174     LOAD_FAST               7: initText
                176     CALL_METHOD             1
                178     POP_TOP                 
                180     LOAD_FAST               8: initFile
                182     RETURN_VALUE            
        'makeInitCPPFile'
        (
            'library'
            'segmentManager'
        )
        [Code]
            File Name: Build.py
            Object Name: getDebugInfo
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 12
            Stack Size: 10
            Flags: 0x00000003 (CO_OPTIMIZED | CO_NEWLOCALS)
            [Names]
                'symbols'
                'sections'
                'name'
                'startswith'
                'size'
                'add'
                'Symbol'
                'address'
                'dataSegment'
                'currentEnd'
                'endAddress'
                'sorted'
                'append'
                'type'
                'join'
                'File'
                'disassemblyDir'
                'write'
                'makeMap'
                'objdump'
            [Var Names]
                'library'
                'segmentManager'
                'symbolText'
                'symbols'
                'section'
                'memoryHeapAddress'
                'memoryHeapSize'
                's'
                'addressesFile'
                'initSymbols'
                'otherSymbols'
                'disassemblyFile'
            [Free Vars]
            [Cell Vars]
                'segmentManager'
            [Constants]
                None
                [Code]
                    File Name: Build.py
                    Object Name: <setcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'name'
                        'startswith'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '.'
                    [Disassembly]
                        0       BUILD_SET               0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                20 (to 26)
                        6       STORE_FAST              1: s
                        8       LOAD_FAST               1: s
                        10      LOAD_ATTR               0: name
                        12      LOAD_METHOD             1: startswith
                        14      LOAD_CONST              0: '.'
                        16      CALL_METHOD             1
                        18      POP_JUMP_IF_TRUE        4
                        20      LOAD_FAST               1: s
                        22      SET_ADD                 2
                        24      JUMP_ABSOLUTE           4
                        26      RETURN_VALUE            
                'getDebugInfo.<locals>.<setcomp>'
                '.'
                0
                '_'
                32
                'C++_HEAP'
                [Code]
                    File Name: Build.py
                    Object Name: <lambda>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 1
                    Stack Size: 1
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'address'
                    [Var Names]
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        None
                    [Disassembly]
                        0       LOAD_FAST               0: s
                        2       LOAD_ATTR               0: address
                        4       RETURN_VALUE            
                'getDebugInfo.<locals>.<lambda>'
                (
                    'key'
                )
                '08X'
                ' '
                '\n'
                '/nm.txt'
                [Code]
                    File Name: Build.py
                    Object Name: <setcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'initializerSegment'
                        'canInsert'
                        'dataSegment'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                        'segmentManager'
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_SET               0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                32 (to 38)
                        6       STORE_FAST              1: s
                        8       LOAD_DEREF              0: segmentManager
                        10      LOAD_ATTR               0: initializerSegment
                        12      LOAD_METHOD             1: canInsert
                        14      LOAD_FAST               1: s
                        16      CALL_METHOD             1
                        18      POP_JUMP_IF_TRUE        32
                        20      LOAD_DEREF              0: segmentManager
                        22      LOAD_ATTR               2: dataSegment
                        24      LOAD_METHOD             1: canInsert
                        26      LOAD_FAST               1: s
                        28      CALL_METHOD             1
                        30      POP_JUMP_IF_FALSE       4
                        32      LOAD_FAST               1: s
                        34      SET_ADD                 2
                        36      JUMP_ABSOLUTE           4
                        38      RETURN_VALUE            
                '/Initializers.map'
                [Code]
                    File Name: Build.py
                    Object Name: <setcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 5
                    Flags: 0x00000013 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED)
                    [Names]
                        'initializerSegment'
                        'canInsert'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                        'segmentManager'
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_SET               0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                20 (to 26)
                        6       STORE_FAST              1: s
                        8       LOAD_DEREF              0: segmentManager
                        10      LOAD_ATTR               0: initializerSegment
                        12      LOAD_METHOD             1: canInsert
                        14      LOAD_FAST               1: s
                        16      CALL_METHOD             1
                        18      POP_JUMP_IF_TRUE        4
                        20      LOAD_FAST               1: s
                        22      SET_ADD                 2
                        24      JUMP_ABSOLUTE           4
                        26      RETURN_VALUE            
                '/Symbols.map'
                '/dis.txt'
                '-h'
            [Disassembly]
                0       BUILD_LIST              0
                2       STORE_FAST              2: symbolText
                4       LOAD_CONST              1: <CODE> <setcomp>
                6       LOAD_CONST              2: 'getDebugInfo.<locals>.<setcomp>'
                8       MAKE_FUNCTION           0
                10      LOAD_FAST               0: library
                12      LOAD_ATTR               0: symbols
                14      GET_ITER                
                16      CALL_FUNCTION           1
                18      STORE_FAST              3: symbols
                20      LOAD_FAST               0: library
                22      LOAD_ATTR               1: sections
                24      GET_ITER                
                26      FOR_ITER                52 (to 80)
                28      STORE_FAST              4: section
                30      LOAD_FAST               4: section
                32      LOAD_ATTR               2: name
                34      LOAD_METHOD             3: startswith
                36      LOAD_CONST              3: '.'
                38      CALL_METHOD             1
                40      POP_JUMP_IF_FALSE       26
                42      LOAD_FAST               4: section
                44      LOAD_ATTR               4: size
                46      LOAD_CONST              4: 0
                48      COMPARE_OP              4 (>)
                50      POP_JUMP_IF_FALSE       26
                52      LOAD_FAST               3: symbols
                54      LOAD_METHOD             5: add
                56      LOAD_GLOBAL             6: Symbol
                58      LOAD_FAST               4: section
                60      LOAD_ATTR               2: name
                62      LOAD_FAST               4: section
                64      LOAD_ATTR               7: address
                66      LOAD_FAST               4: section
                68      LOAD_ATTR               4: size
                70      LOAD_CONST              5: '_'
                72      CALL_FUNCTION           4
                74      CALL_METHOD             1
                76      POP_TOP                 
                78      JUMP_ABSOLUTE           26
                80      LOAD_DEREF              0: segmentManager
                82      LOAD_ATTR               8: dataSegment
                84      LOAD_METHOD             9: currentEnd
                86      CALL_METHOD             0
                88      STORE_FAST              5: memoryHeapAddress
                90      LOAD_FAST               5: memoryHeapAddress
                92      LOAD_CONST              6: 32
                94      LOAD_FAST               5: memoryHeapAddress
                96      LOAD_CONST              6: 32
                98      BINARY_MODULO           
                100     BINARY_SUBTRACT         
                102     INPLACE_ADD             
                104     STORE_FAST              5: memoryHeapAddress
                106     LOAD_DEREF              0: segmentManager
                108     LOAD_ATTR               8: dataSegment
                110     LOAD_ATTR               10: endAddress
                112     LOAD_FAST               5: memoryHeapAddress
                114     BINARY_SUBTRACT         
                116     STORE_FAST              6: memoryHeapSize
                118     LOAD_FAST               3: symbols
                120     LOAD_METHOD             5: add
                122     LOAD_GLOBAL             6: Symbol
                124     LOAD_CONST              7: 'C++_HEAP'
                126     LOAD_FAST               5: memoryHeapAddress
                128     LOAD_FAST               6: memoryHeapSize
                130     LOAD_CONST              5: '_'
                132     CALL_FUNCTION           4
                134     CALL_METHOD             1
                136     POP_TOP                 
                138     LOAD_GLOBAL             11: sorted
                140     LOAD_FAST               3: symbols
                142     LOAD_CONST              8: <CODE> <lambda>
                144     LOAD_CONST              9: 'getDebugInfo.<locals>.<lambda>'
                146     MAKE_FUNCTION           0
                148     LOAD_CONST              10: ('key',)
                150     CALL_FUNCTION_KW        2
                152     STORE_FAST              3: symbols
                154     LOAD_FAST               3: symbols
                156     GET_ITER                
                158     FOR_ITER                48 (to 208)
                160     STORE_FAST              7: s
                162     LOAD_FAST               2: symbolText
                164     LOAD_METHOD             12: append
                166     LOAD_FAST               7: s
                168     LOAD_ATTR               7: address
                170     LOAD_CONST              11: '08X'
                172     FORMAT_VALUE            4
                174     LOAD_CONST              12: ' '
                176     LOAD_FAST               7: s
                178     LOAD_ATTR               4: size
                180     LOAD_CONST              11: '08X'
                182     FORMAT_VALUE            4
                184     LOAD_CONST              12: ' '
                186     LOAD_FAST               7: s
                188     LOAD_ATTR               13: type
                190     FORMAT_VALUE            0
                192     LOAD_CONST              12: ' '
                194     LOAD_FAST               7: s
                196     LOAD_ATTR               2: name
                198     FORMAT_VALUE            0
                200     BUILD_STRING            7
                202     CALL_METHOD             1
                204     POP_TOP                 
                206     JUMP_ABSOLUTE           158
                208     LOAD_CONST              13: '\n'
                210     LOAD_METHOD             14: join
                212     LOAD_FAST               2: symbolText
                214     CALL_METHOD             1
                216     STORE_FAST              2: symbolText
                218     LOAD_GLOBAL             15: File
                220     LOAD_GLOBAL             16: disassemblyDir
                222     FORMAT_VALUE            0
                224     LOAD_CONST              14: '/nm.txt'
                226     BUILD_STRING            2
                228     CALL_FUNCTION           1
                230     STORE_FAST              8: addressesFile
                232     LOAD_FAST               8: addressesFile
                234     LOAD_METHOD             17: write
                236     LOAD_FAST               2: symbolText
                238     CALL_METHOD             1
                240     POP_TOP                 
                242     LOAD_CLOSURE            0: segmentManager
                244     BUILD_TUPLE             1
                246     LOAD_CONST              15: <CODE> <setcomp>
                248     LOAD_CONST              2: 'getDebugInfo.<locals>.<setcomp>'
                250     MAKE_FUNCTION           8
                252     LOAD_FAST               3: symbols
                254     GET_ITER                
                256     CALL_FUNCTION           1
                258     STORE_FAST              9: initSymbols
                260     LOAD_GLOBAL             18: makeMap
                262     LOAD_FAST               9: initSymbols
                264     LOAD_GLOBAL             15: File
                266     LOAD_GLOBAL             16: disassemblyDir
                268     FORMAT_VALUE            0
                270     LOAD_CONST              16: '/Initializers.map'
                272     BUILD_STRING            2
                274     CALL_FUNCTION           1
                276     CALL_FUNCTION           2
                278     POP_TOP                 
                280     LOAD_CLOSURE            0: segmentManager
                282     BUILD_TUPLE             1
                284     LOAD_CONST              17: <CODE> <setcomp>
                286     LOAD_CONST              2: 'getDebugInfo.<locals>.<setcomp>'
                288     MAKE_FUNCTION           8
                290     LOAD_FAST               3: symbols
                292     GET_ITER                
                294     CALL_FUNCTION           1
                296     STORE_FAST              10: otherSymbols
                298     LOAD_GLOBAL             18: makeMap
                300     LOAD_FAST               10: otherSymbols
                302     LOAD_GLOBAL             15: File
                304     LOAD_GLOBAL             16: disassemblyDir
                306     FORMAT_VALUE            0
                308     LOAD_CONST              18: '/Symbols.map'
                310     BUILD_STRING            2
                312     CALL_FUNCTION           1
                314     CALL_FUNCTION           2
                316     POP_TOP                 
                318     LOAD_GLOBAL             15: File
                320     LOAD_GLOBAL             16: disassemblyDir
                322     FORMAT_VALUE            0
                324     LOAD_CONST              19: '/dis.txt'
                326     BUILD_STRING            2
                328     CALL_FUNCTION           1
                330     STORE_FAST              11: disassemblyFile
                332     LOAD_GLOBAL             19: objdump
                334     LOAD_FAST               0: library
                336     LOAD_CONST              20: '-h'
                338     LOAD_FAST               11: disassemblyFile
                340     CALL_FUNCTION           3
                342     POP_TOP                 
                344     LOAD_CONST              0: None
                346     RETURN_VALUE            
        'getDebugInfo'
        (
            'dest'
        )
        [Code]
            File Name: Build.py
            Object Name: makeMap
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 10
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'symbolMapFile'
                'read'
                'strip'
                'split'
                'append'
                'address'
                'size'
                'name'
                'write'
                'join'
            [Var Names]
                'symbols'
                'dest'
                'symbolText'
                's'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '\n'
                '08x'
                ' '
                ' 0 '
                '94000000 00000004 94000000 0 FAKE'
            [Disassembly]
                0       LOAD_GLOBAL             0: symbolMapFile
                2       LOAD_METHOD             1: read
                4       CALL_METHOD             0
                6       STORE_FAST              2: symbolText
                8       LOAD_FAST               2: symbolText
                10      LOAD_METHOD             2: strip
                12      CALL_METHOD             0
                14      STORE_FAST              2: symbolText
                16      LOAD_FAST               2: symbolText
                18      LOAD_METHOD             3: split
                20      LOAD_CONST              1: '\n'
                22      CALL_METHOD             1
                24      STORE_FAST              2: symbolText
                26      LOAD_FAST               0: symbols
                28      GET_ITER                
                30      FOR_ITER                50 (to 82)
                32      STORE_FAST              3: s
                34      LOAD_FAST               2: symbolText
                36      LOAD_METHOD             4: append
                38      LOAD_FAST               3: s
                40      LOAD_ATTR               5: address
                42      LOAD_CONST              2: '08x'
                44      FORMAT_VALUE            4
                46      LOAD_CONST              3: ' '
                48      LOAD_FAST               3: s
                50      LOAD_ATTR               6: size
                52      LOAD_CONST              2: '08x'
                54      FORMAT_VALUE            4
                56      LOAD_CONST              3: ' '
                58      LOAD_FAST               3: s
                60      LOAD_ATTR               5: address
                62      LOAD_CONST              2: '08x'
                64      FORMAT_VALUE            4
                66      LOAD_CONST              4: ' 0 '
                68      LOAD_FAST               3: s
                70      LOAD_ATTR               7: name
                72      FORMAT_VALUE            0
                74      BUILD_STRING            7
                76      CALL_METHOD             1
                78      POP_TOP                 
                80      JUMP_ABSOLUTE           30
                82      LOAD_FAST               2: symbolText
                84      LOAD_METHOD             4: append
                86      LOAD_CONST              5: '94000000 00000004 94000000 0 FAKE'
                88      CALL_METHOD             1
                90      POP_TOP                 
                92      LOAD_FAST               1: dest
                94      LOAD_METHOD             8: write
                96      LOAD_CONST              1: '\n'
                98      LOAD_METHOD             9: join
                100     LOAD_FAST               2: symbolText
                102     CALL_METHOD             1
                104     LOAD_CONST              1: '\n'
                106     BINARY_ADD              
                108     CALL_METHOD             1
                110     POP_TOP                 
                112     LOAD_CONST              0: None
                114     RETURN_VALUE            
        'makeMap'
        (
            'compiledCodes'
            'files'
        )
        [Code]
            File Name: Build.py
            Object Name: makeFilesFile
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 8
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'bytearray'
                'sections'
                'len'
                'AssertionError'
                'extend'
                'address'
                'to_bytes'
                'INITIALIZER_INFO_ADDRESS'
                'enumerate'
                'name'
                'encode'
            [Var Names]
                'compiledCodes'
                'files'
                'data'
                's'
                'i'
                'f'
                'a'
                'sdFileName'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'name'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                        '_INITIALIZE___text__'
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                18 (to 24)
                        6       STORE_FAST              1: s
                        8       LOAD_FAST               1: s
                        10      LOAD_ATTR               0: name
                        12      LOAD_CONST              0: '_INITIALIZE___text__'
                        14      COMPARE_OP              2 (==)
                        16      POP_JUMP_IF_FALSE       4
                        18      LOAD_FAST               1: s
                        20      LIST_APPEND             2
                        22      JUMP_ABSOLUTE           4
                        24      RETURN_VALUE            
                'makeFilesFile.<locals>.<listcomp>'
                1
                0
                4
                'big'
                'codes/'
                'ascii'
                32
            [Disassembly]
                0       LOAD_GLOBAL             0: bytearray
                2       CALL_FUNCTION           0
                4       STORE_FAST              2: data
                6       LOAD_CONST              1: <CODE> <listcomp>
                8       LOAD_CONST              2: 'makeFilesFile.<locals>.<listcomp>'
                10      MAKE_FUNCTION           0
                12      LOAD_FAST               0: compiledCodes
                14      LOAD_ATTR               1: sections
                16      GET_ITER                
                18      CALL_FUNCTION           1
                20      STORE_FAST              3: s
                22      LOAD_GLOBAL             2: len
                24      LOAD_FAST               3: s
                26      CALL_FUNCTION           1
                28      LOAD_CONST              3: 1
                30      COMPARE_OP              2 (==)
                32      POP_JUMP_IF_TRUE        44
                34      LOAD_GLOBAL             3: AssertionError
                36      LOAD_FAST               3: s
                38      FORMAT_VALUE            0
                40      CALL_FUNCTION           1
                42      RAISE_VARARGS           1
                44      LOAD_FAST               2: data
                46      LOAD_METHOD             4: extend
                48      LOAD_FAST               3: s
                50      LOAD_CONST              4: 0
                52      BINARY_SUBSCR           
                54      LOAD_ATTR               5: address
                56      LOAD_METHOD             6: to_bytes
                58      LOAD_CONST              5: 4
                60      LOAD_CONST              6: 'big'
                62      CALL_METHOD             2
                64      CALL_METHOD             1
                66      POP_TOP                 
                68      LOAD_FAST               2: data
                70      LOAD_METHOD             4: extend
                72      LOAD_GLOBAL             7: INITIALIZER_INFO_ADDRESS
                74      LOAD_METHOD             6: to_bytes
                76      LOAD_CONST              5: 4
                78      LOAD_CONST              6: 'big'
                80      CALL_METHOD             2
                82      CALL_METHOD             1
                84      POP_TOP                 
                86      LOAD_FAST               2: data
                88      LOAD_METHOD             4: extend
                90      LOAD_GLOBAL             2: len
                92      LOAD_FAST               1: files
                94      CALL_FUNCTION           1
                96      LOAD_METHOD             6: to_bytes
                98      LOAD_CONST              5: 4
                100     LOAD_CONST              6: 'big'
                102     CALL_METHOD             2
                104     CALL_METHOD             1
                106     POP_TOP                 
                108     LOAD_GLOBAL             8: enumerate
                110     LOAD_FAST               1: files
                112     CALL_FUNCTION           1
                114     GET_ITER                
                116     FOR_ITER                84 (to 202)
                118     UNPACK_SEQUENCE         2
                120     STORE_FAST              4: i
                122     UNPACK_SEQUENCE         2
                124     STORE_FAST              5: f
                126     STORE_FAST              6: a
                128     LOAD_FAST               2: data
                130     LOAD_METHOD             4: extend
                132     LOAD_FAST               6: a
                134     LOAD_METHOD             6: to_bytes
                136     LOAD_CONST              5: 4
                138     LOAD_CONST              6: 'big'
                140     CALL_METHOD             2
                142     CALL_METHOD             1
                144     POP_TOP                 
                146     LOAD_CONST              7: 'codes/'
                148     LOAD_FAST               5: f
                150     LOAD_ATTR               9: name
                152     FORMAT_VALUE            0
                154     BUILD_STRING            2
                156     STORE_FAST              7: sdFileName
                158     LOAD_FAST               2: data
                160     LOAD_METHOD             4: extend
                162     LOAD_FAST               7: sdFileName
                164     LOAD_METHOD             10: encode
                166     LOAD_CONST              8: 'ascii'
                168     CALL_METHOD             1
                170     CALL_METHOD             1
                172     POP_TOP                 
                174     LOAD_FAST               2: data
                176     LOAD_METHOD             4: extend
                178     LOAD_CONST              4: 0
                180     LOAD_METHOD             6: to_bytes
                182     LOAD_CONST              9: 32
                184     LOAD_GLOBAL             2: len
                186     LOAD_FAST               7: sdFileName
                188     CALL_FUNCTION           1
                190     BINARY_SUBTRACT         
                192     LOAD_CONST              6: 'big'
                194     CALL_METHOD             2
                196     CALL_METHOD             1
                198     POP_TOP                 
                200     JUMP_ABSOLUTE           116
                202     LOAD_FAST               2: data
                204     RETURN_VALUE            
        'makeFilesFile'
        (
            'linkedCodes'
            'segmentList'
        )
        [Code]
            File Name: Build.py
            Object Name: extractFiles
            Arg Count: 2
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 9
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'segments'
                'values'
                'sections'
                'extractSections'
                'File'
                'name'
                'compress'
                'append'
                'startAddress'
                'makeInitializerInfo'
                'INITIALIZER_INFO_ADDRESS'
                'INFO_SEGMENT_ADDRESS'
                'writeBinary'
                'makeInjectionsInfo'
            [Var Names]
                'linkedCodes'
                'segmentList'
                'files'
                's'
                'extractedCodes'
                'outputCodes'
                'initializersInfo'
                'f'
                'injectionsInfo'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                'IntermediateFiles/'
                'Output/'
                'Output/InitInfo'
                'Output/Injections'
            [Disassembly]
                0       BUILD_LIST              0
                2       STORE_FAST              2: files
                4       LOAD_FAST               1: segmentList
                6       LOAD_ATTR               0: segments
                8       LOAD_METHOD             1: values
                10      CALL_METHOD             0
                12      GET_ITER                
                14      FOR_ITER                74 (to 90)
                16      STORE_FAST              3: s
                18      LOAD_FAST               3: s
                20      LOAD_ATTR               2: sections
                22      POP_JUMP_IF_FALSE       14
                24      LOAD_FAST               0: linkedCodes
                26      LOAD_METHOD             3: extractSections
                28      LOAD_FAST               3: s
                30      LOAD_ATTR               2: sections
                32      LOAD_GLOBAL             4: File
                34      LOAD_CONST              1: 'IntermediateFiles/'
                36      LOAD_FAST               3: s
                38      LOAD_ATTR               5: name
                40      FORMAT_VALUE            0
                42      BUILD_STRING            2
                44      CALL_FUNCTION           1
                46      CALL_METHOD             2
                48      STORE_FAST              4: extractedCodes
                50      LOAD_FAST               4: extractedCodes
                52      LOAD_METHOD             6: compress
                54      LOAD_GLOBAL             4: File
                56      LOAD_CONST              2: 'Output/'
                58      LOAD_FAST               3: s
                60      LOAD_ATTR               5: name
                62      FORMAT_VALUE            0
                64      BUILD_STRING            2
                66      CALL_FUNCTION           1
                68      CALL_METHOD             1
                70      STORE_FAST              5: outputCodes
                72      LOAD_FAST               2: files
                74      LOAD_METHOD             7: append
                76      LOAD_FAST               5: outputCodes
                78      LOAD_FAST               3: s
                80      LOAD_ATTR               8: startAddress
                82      BUILD_TUPLE             2
                84      CALL_METHOD             1
                86      POP_TOP                 
                88      JUMP_ABSOLUTE           14
                90      LOAD_GLOBAL             9: makeInitializerInfo
                92      LOAD_GLOBAL             10: INITIALIZER_INFO_ADDRESS
                94      LOAD_GLOBAL             11: INFO_SEGMENT_ADDRESS
                96      LOAD_FAST               0: linkedCodes
                98      LOAD_FAST               1: segmentList
                100     CALL_FUNCTION           4
                102     STORE_FAST              6: initializersInfo
                104     LOAD_GLOBAL             4: File
                106     LOAD_CONST              3: 'Output/InitInfo'
                108     CALL_FUNCTION           1
                110     STORE_FAST              7: f
                112     LOAD_FAST               7: f
                114     LOAD_METHOD             12: writeBinary
                116     LOAD_FAST               6: initializersInfo
                118     CALL_METHOD             1
                120     POP_TOP                 
                122     LOAD_FAST               2: files
                124     LOAD_METHOD             7: append
                126     LOAD_FAST               7: f
                128     LOAD_GLOBAL             10: INITIALIZER_INFO_ADDRESS
                130     BUILD_TUPLE             2
                132     CALL_METHOD             1
                134     POP_TOP                 
                136     LOAD_GLOBAL             13: makeInjectionsInfo
                138     LOAD_FAST               0: linkedCodes
                140     CALL_FUNCTION           1
                142     STORE_FAST              8: injectionsInfo
                144     LOAD_GLOBAL             4: File
                146     LOAD_CONST              4: 'Output/Injections'
                148     CALL_FUNCTION           1
                150     STORE_FAST              7: f
                152     LOAD_FAST               7: f
                154     LOAD_METHOD             12: writeBinary
                156     LOAD_FAST               8: injectionsInfo
                158     CALL_METHOD             1
                160     POP_TOP                 
                162     LOAD_FAST               2: files
                164     LOAD_METHOD             7: append
                166     LOAD_FAST               7: f
                168     LOAD_GLOBAL             11: INFO_SEGMENT_ADDRESS
                170     BUILD_TUPLE             2
                172     CALL_METHOD             1
                174     POP_TOP                 
                176     LOAD_FAST               2: files
                178     RETURN_VALUE            
        'extractFiles'
        (
            'initializerInfoAddress'
            'injectionsInfoAddress'
            'compiledCodes'
            'segmentManager'
        )
        [Code]
            File Name: Build.py
            Object Name: makeInitializerInfo
            Arg Count: 4
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 13
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'makeMemoryHeapInfo'
                'makeStartupsInfo'
                'makeStringWriteInfo'
                'makeDataWriteInfo'
                'bytearray'
                'to_bytes'
                'len'
                'extend'
            [Var Names]
                'initializerInfoAddress'
                'injectionsInfoAddress'
                'compiledCodes'
                'segmentManager'
                'memoryHeapInfoData'
                'startupsInfoData'
                'stringWriteInfoData'
                'dataWriteInfoData'
                'data'
                'memoryHeapInfoAddress'
                'startupsInfoAddress'
                'stringWritesInfoAddress'
                'dataWriteInfoAddress'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                20
                4
                'big'
            [Disassembly]
                0       LOAD_GLOBAL             0: makeMemoryHeapInfo
                2       LOAD_FAST               3: segmentManager
                4       CALL_FUNCTION           1
                6       STORE_FAST              4: memoryHeapInfoData
                8       LOAD_GLOBAL             1: makeStartupsInfo
                10      LOAD_FAST               2: compiledCodes
                12      CALL_FUNCTION           1
                14      STORE_FAST              5: startupsInfoData
                16      LOAD_GLOBAL             2: makeStringWriteInfo
                18      LOAD_FAST               2: compiledCodes
                20      CALL_FUNCTION           1
                22      STORE_FAST              6: stringWriteInfoData
                24      LOAD_GLOBAL             3: makeDataWriteInfo
                26      LOAD_FAST               2: compiledCodes
                28      CALL_FUNCTION           1
                30      STORE_FAST              7: dataWriteInfoData
                32      LOAD_GLOBAL             4: bytearray
                34      CALL_FUNCTION           0
                36      STORE_FAST              8: data
                38      LOAD_FAST               0: initializerInfoAddress
                40      LOAD_CONST              1: 20
                42      BINARY_ADD              
                44      STORE_FAST              9: memoryHeapInfoAddress
                46      LOAD_FAST               8: data
                48      LOAD_FAST               9: memoryHeapInfoAddress
                50      LOAD_METHOD             5: to_bytes
                52      LOAD_CONST              2: 4
                54      LOAD_CONST              3: 'big'
                56      CALL_METHOD             2
                58      INPLACE_ADD             
                60      STORE_FAST              8: data
                62      LOAD_FAST               9: memoryHeapInfoAddress
                64      LOAD_GLOBAL             6: len
                66      LOAD_FAST               4: memoryHeapInfoData
                68      CALL_FUNCTION           1
                70      BINARY_ADD              
                72      STORE_FAST              10: startupsInfoAddress
                74      LOAD_FAST               8: data
                76      LOAD_FAST               10: startupsInfoAddress
                78      LOAD_METHOD             5: to_bytes
                80      LOAD_CONST              2: 4
                82      LOAD_CONST              3: 'big'
                84      CALL_METHOD             2
                86      INPLACE_ADD             
                88      STORE_FAST              8: data
                90      LOAD_FAST               10: startupsInfoAddress
                92      LOAD_GLOBAL             6: len
                94      LOAD_FAST               5: startupsInfoData
                96      CALL_FUNCTION           1
                98      BINARY_ADD              
                100     STORE_FAST              11: stringWritesInfoAddress
                102     LOAD_FAST               8: data
                104     LOAD_FAST               11: stringWritesInfoAddress
                106     LOAD_METHOD             5: to_bytes
                108     LOAD_CONST              2: 4
                110     LOAD_CONST              3: 'big'
                112     CALL_METHOD             2
                114     INPLACE_ADD             
                116     STORE_FAST              8: data
                118     LOAD_FAST               11: stringWritesInfoAddress
                120     LOAD_GLOBAL             6: len
                122     LOAD_FAST               6: stringWriteInfoData
                124     CALL_FUNCTION           1
                126     BINARY_ADD              
                128     STORE_FAST              12: dataWriteInfoAddress
                130     LOAD_FAST               8: data
                132     LOAD_FAST               12: dataWriteInfoAddress
                134     LOAD_METHOD             5: to_bytes
                136     LOAD_CONST              2: 4
                138     LOAD_CONST              3: 'big'
                140     CALL_METHOD             2
                142     INPLACE_ADD             
                144     STORE_FAST              8: data
                146     LOAD_FAST               8: data
                148     LOAD_FAST               1: injectionsInfoAddress
                150     LOAD_METHOD             5: to_bytes
                152     LOAD_CONST              2: 4
                154     LOAD_CONST              3: 'big'
                156     CALL_METHOD             2
                158     INPLACE_ADD             
                160     STORE_FAST              8: data
                162     LOAD_FAST               8: data
                164     LOAD_METHOD             7: extend
                166     LOAD_FAST               4: memoryHeapInfoData
                168     CALL_METHOD             1
                170     POP_TOP                 
                172     LOAD_FAST               8: data
                174     LOAD_METHOD             7: extend
                176     LOAD_FAST               5: startupsInfoData
                178     CALL_METHOD             1
                180     POP_TOP                 
                182     LOAD_FAST               8: data
                184     LOAD_METHOD             7: extend
                186     LOAD_FAST               6: stringWriteInfoData
                188     CALL_METHOD             1
                190     POP_TOP                 
                192     LOAD_FAST               8: data
                194     LOAD_METHOD             7: extend
                196     LOAD_FAST               7: dataWriteInfoData
                198     CALL_METHOD             1
                200     POP_TOP                 
                202     LOAD_FAST               8: data
                204     RETURN_VALUE            
        'makeInitializerInfo'
        (
            'segmentManager'
        )
        [Code]
            File Name: Build.py
            Object Name: makeMemoryHeapInfo
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'bytearray'
                'dataSegment'
                'currentEnd'
                'endAddress'
                'to_bytes'
            [Var Names]
                'segmentManager'
                'data'
                'memoryHeapAddress'
                'memoryHeapSize'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                32
                4
                'big'
            [Disassembly]
                0       LOAD_GLOBAL             0: bytearray
                2       CALL_FUNCTION           0
                4       STORE_FAST              1: data
                6       LOAD_FAST               0: segmentManager
                8       LOAD_ATTR               1: dataSegment
                10      LOAD_METHOD             2: currentEnd
                12      CALL_METHOD             0
                14      STORE_FAST              2: memoryHeapAddress
                16      LOAD_FAST               2: memoryHeapAddress
                18      LOAD_CONST              1: 32
                20      LOAD_FAST               2: memoryHeapAddress
                22      LOAD_CONST              1: 32
                24      BINARY_MODULO           
                26      BINARY_SUBTRACT         
                28      INPLACE_ADD             
                30      STORE_FAST              2: memoryHeapAddress
                32      LOAD_FAST               0: segmentManager
                34      LOAD_ATTR               1: dataSegment
                36      LOAD_ATTR               3: endAddress
                38      LOAD_FAST               2: memoryHeapAddress
                40      BINARY_SUBTRACT         
                42      STORE_FAST              3: memoryHeapSize
                44      LOAD_FAST               1: data
                46      LOAD_FAST               2: memoryHeapAddress
                48      LOAD_METHOD             4: to_bytes
                50      LOAD_CONST              2: 4
                52      LOAD_CONST              3: 'big'
                54      CALL_METHOD             2
                56      INPLACE_ADD             
                58      STORE_FAST              1: data
                60      LOAD_FAST               1: data
                62      LOAD_FAST               3: memoryHeapSize
                64      LOAD_METHOD             4: to_bytes
                66      LOAD_CONST              2: 4
                68      LOAD_CONST              3: 'big'
                70      CALL_METHOD             2
                72      INPLACE_ADD             
                74      STORE_FAST              1: data
                76      LOAD_FAST               1: data
                78      RETURN_VALUE            
        'makeMemoryHeapInfo'
        (
            'compiledCodes'
        )
        [Code]
            File Name: Build.py
            Object Name: makeStartupsInfo
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 6
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'bytearray'
                'constructors'
                'symbols'
                'len'
                'to_bytes'
                'address'
            [Var Names]
                'compiledCodes'
                'data'
                'constructors'
                'startups'
                'c'
                's'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'isStartup'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                16 (to 22)
                        6       STORE_FAST              1: s
                        8       LOAD_FAST               1: s
                        10      LOAD_METHOD             0: isStartup
                        12      CALL_METHOD             0
                        14      POP_JUMP_IF_FALSE       4
                        16      LOAD_FAST               1: s
                        18      LIST_APPEND             2
                        20      JUMP_ABSOLUTE           4
                        22      RETURN_VALUE            
                'makeStartupsInfo.<locals>.<listcomp>'
                4
                'big'
            [Disassembly]
                0       LOAD_GLOBAL             0: bytearray
                2       CALL_FUNCTION           0
                4       STORE_FAST              1: data
                6       LOAD_FAST               0: compiledCodes
                8       LOAD_METHOD             1: constructors
                10      CALL_METHOD             0
                12      STORE_FAST              2: constructors
                14      LOAD_CONST              1: <CODE> <listcomp>
                16      LOAD_CONST              2: 'makeStartupsInfo.<locals>.<listcomp>'
                18      MAKE_FUNCTION           0
                20      LOAD_FAST               0: compiledCodes
                22      LOAD_ATTR               2: symbols
                24      GET_ITER                
                26      CALL_FUNCTION           1
                28      STORE_FAST              3: startups
                30      LOAD_FAST               1: data
                32      LOAD_GLOBAL             3: len
                34      LOAD_FAST               2: constructors
                36      CALL_FUNCTION           1
                38      LOAD_GLOBAL             3: len
                40      LOAD_FAST               3: startups
                42      CALL_FUNCTION           1
                44      BINARY_ADD              
                46      LOAD_METHOD             4: to_bytes
                48      LOAD_CONST              3: 4
                50      LOAD_CONST              4: 'big'
                52      CALL_METHOD             2
                54      INPLACE_ADD             
                56      STORE_FAST              1: data
                58      LOAD_FAST               2: constructors
                60      GET_ITER                
                62      FOR_ITER                22 (to 86)
                64      STORE_FAST              4: c
                66      LOAD_FAST               1: data
                68      LOAD_FAST               4: c
                70      LOAD_ATTR               5: address
                72      LOAD_METHOD             4: to_bytes
                74      LOAD_CONST              3: 4
                76      LOAD_CONST              4: 'big'
                78      CALL_METHOD             2
                80      INPLACE_ADD             
                82      STORE_FAST              1: data
                84      JUMP_ABSOLUTE           62
                86      LOAD_FAST               3: startups
                88      GET_ITER                
                90      FOR_ITER                22 (to 114)
                92      STORE_FAST              5: s
                94      LOAD_FAST               1: data
                96      LOAD_FAST               5: s
                98      LOAD_ATTR               5: address
                100     LOAD_METHOD             4: to_bytes
                102     LOAD_CONST              3: 4
                104     LOAD_CONST              4: 'big'
                106     CALL_METHOD             2
                108     INPLACE_ADD             
                110     STORE_FAST              1: data
                112     JUMP_ABSOLUTE           90
                114     LOAD_FAST               1: data
                116     RETURN_VALUE            
        'makeStartupsInfo'
        [Code]
            File Name: Build.py
            Object Name: makeStringWriteInfo
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'bytearray'
                'symbols'
                're'
                'search'
                'name'
                'int'
                'to_bytes'
                'address'
                'size'
                'len'
            [Var Names]
                'compiledCodes'
                'data'
                'writes'
                's'
                'w'
                'targetAddress'
                'dataAddress'
                'dataSize'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '_STRING_WRITE_(0x.+)'
                1
                16
                (
                    'base'
                )
                4
                'big'
                12
            [Disassembly]
                0       LOAD_GLOBAL             0: bytearray
                2       CALL_FUNCTION           0
                4       STORE_FAST              1: data
                6       LOAD_GLOBAL             0: bytearray
                8       CALL_FUNCTION           0
                10      STORE_FAST              2: writes
                12      LOAD_FAST               0: compiledCodes
                14      LOAD_ATTR               1: symbols
                16      GET_ITER                
                18      FOR_ITER                98 (to 118)
                20      STORE_FAST              3: s
                22      LOAD_GLOBAL             2: re
                24      LOAD_METHOD             3: search
                26      LOAD_CONST              1: '_STRING_WRITE_(0x.+)'
                28      LOAD_FAST               3: s
                30      LOAD_ATTR               4: name
                32      CALL_METHOD             2
                34      STORE_FAST              4: w
                36      LOAD_FAST               4: w
                38      POP_JUMP_IF_FALSE       18
                40      LOAD_GLOBAL             5: int
                42      LOAD_FAST               4: w
                44      LOAD_CONST              2: 1
                46      BINARY_SUBSCR           
                48      LOAD_CONST              3: 16
                50      LOAD_CONST              4: ('base',)
                52      CALL_FUNCTION_KW        2
                54      LOAD_METHOD             6: to_bytes
                56      LOAD_CONST              5: 4
                58      LOAD_CONST              6: 'big'
                60      CALL_METHOD             2
                62      STORE_FAST              5: targetAddress
                64      LOAD_FAST               3: s
                66      LOAD_ATTR               7: address
                68      LOAD_METHOD             6: to_bytes
                70      LOAD_CONST              5: 4
                72      LOAD_CONST              6: 'big'
                74      CALL_METHOD             2
                76      STORE_FAST              6: dataAddress
                78      LOAD_FAST               3: s
                80      LOAD_ATTR               8: size
                82      LOAD_METHOD             6: to_bytes
                84      LOAD_CONST              5: 4
                86      LOAD_CONST              6: 'big'
                88      CALL_METHOD             2
                90      STORE_FAST              7: dataSize
                92      LOAD_FAST               2: writes
                94      LOAD_FAST               5: targetAddress
                96      INPLACE_ADD             
                98      STORE_FAST              2: writes
                100     LOAD_FAST               2: writes
                102     LOAD_FAST               6: dataAddress
                104     INPLACE_ADD             
                106     STORE_FAST              2: writes
                108     LOAD_FAST               2: writes
                110     LOAD_FAST               7: dataSize
                112     INPLACE_ADD             
                114     STORE_FAST              2: writes
                116     JUMP_ABSOLUTE           18
                118     LOAD_FAST               1: data
                120     LOAD_GLOBAL             9: len
                122     LOAD_FAST               2: writes
                124     CALL_FUNCTION           1
                126     LOAD_CONST              7: 12
                128     BINARY_FLOOR_DIVIDE     
                130     LOAD_METHOD             6: to_bytes
                132     LOAD_CONST              5: 4
                134     LOAD_CONST              6: 'big'
                136     CALL_METHOD             2
                138     INPLACE_ADD             
                140     STORE_FAST              1: data
                142     LOAD_FAST               1: data
                144     LOAD_FAST               2: writes
                146     INPLACE_ADD             
                148     STORE_FAST              1: data
                150     LOAD_FAST               1: data
                152     RETURN_VALUE            
        'makeStringWriteInfo'
        [Code]
            File Name: Build.py
            Object Name: makeDataWriteInfo
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 8
            Stack Size: 7
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'symbols'
                're'
                'search'
                'name'
                'int'
                'to_bytes'
                'ceil'
                'len'
                'startswith'
                'append'
                'bytearray'
            [Var Names]
                'compiledCodes'
                'writes'
                's'
                'w'
                'address'
                'data'
                'repeats'
                'alignedData'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                '_DATA_WRITE_([^_]+)_(0x[a-fA-F0-9]+)_((0x)?[a-fA-F0-9]+)'
                1
                16
                (
                    'base'
                )
                4
                'big'
                2
                '0x'
                3
                0
            [Disassembly]
                0       BUILD_LIST              0
                2       STORE_FAST              1: writes
                4       LOAD_FAST               0: compiledCodes
                6       LOAD_ATTR               0: symbols
                8       GET_ITER                
                10      FOR_ITER                166 (to 178)
                12      STORE_FAST              2: s
                14      LOAD_GLOBAL             1: re
                16      LOAD_METHOD             2: search
                18      LOAD_CONST              1: '_DATA_WRITE_([^_]+)_(0x[a-fA-F0-9]+)_((0x)?[a-fA-F0-9]+)'
                20      LOAD_FAST               2: s
                22      LOAD_ATTR               3: name
                24      CALL_METHOD             2
                26      STORE_FAST              3: w
                28      LOAD_FAST               3: w
                30      POP_JUMP_IF_FALSE       10
                32      LOAD_GLOBAL             4: int
                34      LOAD_FAST               3: w
                36      LOAD_CONST              2: 1
                38      BINARY_SUBSCR           
                40      LOAD_CONST              3: 16
                42      LOAD_CONST              4: ('base',)
                44      CALL_FUNCTION_KW        2
                46      LOAD_METHOD             5: to_bytes
                48      LOAD_CONST              5: 4
                50      LOAD_CONST              6: 'big'
                52      CALL_METHOD             2
                54      STORE_FAST              4: address
                56      LOAD_GLOBAL             4: int
                58      LOAD_FAST               3: w
                60      LOAD_CONST              7: 2
                62      BINARY_SUBSCR           
                64      LOAD_CONST              3: 16
                66      LOAD_CONST              4: ('base',)
                68      CALL_FUNCTION_KW        2
                70      STORE_FAST              5: data
                72      LOAD_FAST               5: data
                74      LOAD_METHOD             5: to_bytes
                76      LOAD_GLOBAL             6: ceil
                78      LOAD_GLOBAL             7: len
                80      LOAD_FAST               3: w
                82      LOAD_CONST              7: 2
                84      BINARY_SUBSCR           
                86      CALL_FUNCTION           1
                88      LOAD_CONST              7: 2
                90      BINARY_SUBTRACT         
                92      LOAD_CONST              7: 2
                94      BINARY_TRUE_DIVIDE      
                96      CALL_FUNCTION           1
                98      LOAD_CONST              6: 'big'
                100     CALL_METHOD             2
                102     STORE_FAST              5: data
                104     LOAD_FAST               3: w
                106     LOAD_CONST              5: 4
                108     BINARY_SUBSCR           
                110     LOAD_METHOD             8: startswith
                112     LOAD_CONST              8: '0x'
                114     CALL_METHOD             1
                116     POP_JUMP_IF_FALSE       136
                118     LOAD_GLOBAL             4: int
                120     LOAD_FAST               3: w
                122     LOAD_CONST              9: 3
                124     BINARY_SUBSCR           
                126     LOAD_CONST              3: 16
                128     LOAD_CONST              4: ('base',)
                130     CALL_FUNCTION_KW        2
                132     STORE_FAST              6: repeats
                134     JUMP_FORWARD            12 (to 148)
                136     LOAD_GLOBAL             4: int
                138     LOAD_FAST               3: w
                140     LOAD_CONST              9: 3
                142     BINARY_SUBSCR           
                144     CALL_FUNCTION           1
                146     STORE_FAST              6: repeats
                148     LOAD_FAST               6: repeats
                150     LOAD_METHOD             5: to_bytes
                152     LOAD_CONST              7: 2
                154     LOAD_CONST              6: 'big'
                156     CALL_METHOD             2
                158     STORE_FAST              6: repeats
                160     LOAD_FAST               1: writes
                162     LOAD_METHOD             9: append
                164     LOAD_FAST               4: address
                166     LOAD_FAST               5: data
                168     LOAD_FAST               6: repeats
                170     BUILD_TUPLE             3
                172     CALL_METHOD             1
                174     POP_TOP                 
                176     JUMP_ABSOLUTE           10
                178     LOAD_GLOBAL             10: bytearray
                180     CALL_FUNCTION           0
                182     STORE_FAST              5: data
                184     LOAD_FAST               1: writes
                186     GET_ITER                
                188     FOR_ITER                92 (to 282)
                190     STORE_FAST              3: w
                192     LOAD_FAST               5: data
                194     LOAD_FAST               3: w
                196     LOAD_CONST              10: 0
                198     BINARY_SUBSCR           
                200     INPLACE_ADD             
                202     STORE_FAST              5: data
                204     LOAD_FAST               5: data
                206     LOAD_GLOBAL             7: len
                208     LOAD_FAST               3: w
                210     LOAD_CONST              2: 1
                212     BINARY_SUBSCR           
                214     CALL_FUNCTION           1
                216     LOAD_METHOD             5: to_bytes
                218     LOAD_CONST              7: 2
                220     LOAD_CONST              6: 'big'
                222     CALL_METHOD             2
                224     INPLACE_ADD             
                226     STORE_FAST              5: data
                228     LOAD_FAST               5: data
                230     LOAD_FAST               3: w
                232     LOAD_CONST              7: 2
                234     BINARY_SUBSCR           
                236     INPLACE_ADD             
                238     STORE_FAST              5: data
                240     LOAD_FAST               3: w
                242     LOAD_CONST              2: 1
                244     BINARY_SUBSCR           
                246     LOAD_GLOBAL             10: bytearray
                248     LOAD_CONST              5: 4
                250     LOAD_GLOBAL             7: len
                252     LOAD_FAST               3: w
                254     LOAD_CONST              2: 1
                256     BINARY_SUBSCR           
                258     CALL_FUNCTION           1
                260     LOAD_CONST              5: 4
                262     BINARY_MODULO           
                264     BINARY_SUBTRACT         
                266     CALL_FUNCTION           1
                268     BINARY_ADD              
                270     STORE_FAST              7: alignedData
                272     LOAD_FAST               5: data
                274     LOAD_FAST               7: alignedData
                276     INPLACE_ADD             
                278     STORE_FAST              5: data
                280     JUMP_ABSOLUTE           188
                282     LOAD_FAST               5: data
                284     LOAD_CONST              10: 0
                286     LOAD_METHOD             5: to_bytes
                288     LOAD_CONST              5: 4
                290     LOAD_CONST              6: 'big'
                292     CALL_METHOD             2
                294     INPLACE_ADD             
                296     STORE_FAST              5: data
                298     LOAD_FAST               5: data
                300     RETURN_VALUE            
        'makeDataWriteInfo'
        [Code]
            File Name: Build.py
            Object Name: makeInjectionsInfo
            Arg Count: 1
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 6
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'bytearray'
                'symbols'
                'len'
                'to_bytes'
                'injectionAddress'
                'address'
                'size'
            [Var Names]
                'compiledCodes'
                'data'
                'injections'
                'i'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                [Code]
                    File Name: Build.py
                    Object Name: <listcomp>
                    Arg Count: 1
                    Pos Only Arg Count: 0
                    KW Only Arg Count: 0
                    Locals: 2
                    Stack Size: 4
                    Flags: 0x00000053 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NESTED | CO_NOFREE)
                    [Names]
                        'isInjection'
                    [Var Names]
                        '.0'
                        's'
                    [Free Vars]
                    [Cell Vars]
                    [Constants]
                    [Disassembly]
                        0       BUILD_LIST              0
                        2       LOAD_FAST               0: .0
                        4       FOR_ITER                16 (to 22)
                        6       STORE_FAST              1: s
                        8       LOAD_FAST               1: s
                        10      LOAD_METHOD             0: isInjection
                        12      CALL_METHOD             0
                        14      POP_JUMP_IF_FALSE       4
                        16      LOAD_FAST               1: s
                        18      LIST_APPEND             2
                        20      JUMP_ABSOLUTE           4
                        22      RETURN_VALUE            
                'makeInjectionsInfo.<locals>.<listcomp>'
                4
                'big'
            [Disassembly]
                0       LOAD_GLOBAL             0: bytearray
                2       CALL_FUNCTION           0
                4       STORE_FAST              1: data
                6       LOAD_CONST              1: <CODE> <listcomp>
                8       LOAD_CONST              2: 'makeInjectionsInfo.<locals>.<listcomp>'
                10      MAKE_FUNCTION           0
                12      LOAD_FAST               0: compiledCodes
                14      LOAD_ATTR               1: symbols
                16      GET_ITER                
                18      CALL_FUNCTION           1
                20      STORE_FAST              2: injections
                22      LOAD_FAST               1: data
                24      LOAD_GLOBAL             2: len
                26      LOAD_FAST               2: injections
                28      CALL_FUNCTION           1
                30      LOAD_METHOD             3: to_bytes
                32      LOAD_CONST              3: 4
                34      LOAD_CONST              4: 'big'
                36      CALL_METHOD             2
                38      INPLACE_ADD             
                40      STORE_FAST              1: data
                42      LOAD_FAST               2: injections
                44      GET_ITER                
                46      FOR_ITER                70 (to 118)
                48      STORE_FAST              3: i
                50      LOAD_FAST               1: data
                52      LOAD_FAST               3: i
                54      LOAD_METHOD             4: injectionAddress
                56      CALL_METHOD             0
                58      LOAD_METHOD             3: to_bytes
                60      LOAD_CONST              3: 4
                62      LOAD_CONST              4: 'big'
                64      CALL_METHOD             2
                66      INPLACE_ADD             
                68      STORE_FAST              1: data
                70      LOAD_FAST               1: data
                72      LOAD_FAST               3: i
                74      LOAD_ATTR               5: address
                76      LOAD_METHOD             3: to_bytes
                78      LOAD_CONST              3: 4
                80      LOAD_CONST              4: 'big'
                82      CALL_METHOD             2
                84      INPLACE_ADD             
                86      STORE_FAST              1: data
                88      LOAD_FAST               1: data
                90      LOAD_FAST               3: i
                92      LOAD_ATTR               5: address
                94      LOAD_FAST               3: i
                96      LOAD_ATTR               6: size
                98      BINARY_ADD              
                100     LOAD_CONST              3: 4
                102     BINARY_SUBTRACT         
                104     LOAD_METHOD             3: to_bytes
                106     LOAD_CONST              3: 4
                108     LOAD_CONST              4: 'big'
                110     CALL_METHOD             2
                112     INPLACE_ADD             
                114     STORE_FAST              1: data
                116     JUMP_ABSOLUTE           46
                118     LOAD_FAST               1: data
                120     RETURN_VALUE            
        'makeInjectionsInfo'
        '__main__'
        [Code]
            File Name: Build.py
            Object Name: show_exception_and_exit
            Arg Count: 3
            Pos Only Arg Count: 0
            KW Only Arg Count: 0
            Locals: 4
            Stack Size: 5
            Flags: 0x00000043 (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)
            [Names]
                'traceback'
                'print_exception'
                'input'
                'sys'
                'exit'
            [Var Names]
                'exc_type'
                'exc_value'
                'tb'
                'traceback'
            [Free Vars]
            [Cell Vars]
            [Constants]
                None
                0
                'Press enter to exit.'
                -1
            [Disassembly]
                0       LOAD_CONST              1: 0
                2       LOAD_CONST              0: None
                4       IMPORT_NAME             0: traceback
                6       STORE_FAST              3: traceback
                8       LOAD_FAST               3: traceback
                10      LOAD_METHOD             1: print_exception
                12      LOAD_FAST               0: exc_type
                14      LOAD_FAST               1: exc_value
                16      LOAD_FAST               2: tb
                18      CALL_METHOD             3
                20      POP_TOP                 
                22      LOAD_GLOBAL             2: input
                24      LOAD_CONST              2: 'Press enter to exit.'
                26      CALL_FUNCTION           1
                28      POP_TOP                 
                30      LOAD_GLOBAL             3: sys
                32      LOAD_METHOD             4: exit
                34      LOAD_CONST              3: -1
                36      CALL_METHOD             1
                38      POP_TOP                 
                40      LOAD_CONST              0: None
                42      RETURN_VALUE            
        'show_exception_and_exit'
        1
        (
            None
            None
            None
            None
        )
    [Disassembly]
        0       SETUP_ANNOTATIONS       
        2       LOAD_CONST              0: 0
        4       LOAD_CONST              1: None
        6       IMPORT_NAME             0: sys
        8       STORE_NAME              0: sys
        10      LOAD_CONST              0: 0
        12      LOAD_CONST              1: None
        14      IMPORT_NAME             1: os
        16      STORE_NAME              1: os
        18      LOAD_CONST              0: 0
        20      LOAD_CONST              1: None
        22      IMPORT_NAME             2: re
        24      STORE_NAME              2: re
        26      LOAD_CONST              0: 0
        28      LOAD_CONST              2: ('setEnvironment',)
        30      IMPORT_NAME             3: SetEnvironment
        32      IMPORT_FROM             4: setEnvironment
        34      STORE_NAME              4: setEnvironment
        36      POP_TOP                 
        38      LOAD_CONST              0: 0
        40      LOAD_CONST              3: ('LibraryDirectory',)
        42      IMPORT_NAME             5: LibraryDirectory
        44      IMPORT_FROM             5: LibraryDirectory
        46      STORE_NAME              5: LibraryDirectory
        48      POP_TOP                 
        50      LOAD_CONST              0: 0
        52      LOAD_CONST              4: ('Library', 'InitialSectionNameLibrary', 'File', 'FinalSectionNameLibrary')
        54      IMPORT_NAME             6: Library
        56      IMPORT_FROM             6: Library
        58      STORE_NAME              6: Library
        60      IMPORT_FROM             7: InitialSectionNameLibrary
        62      STORE_NAME              7: InitialSectionNameLibrary
        64      IMPORT_FROM             8: File
        66      STORE_NAME              8: File
        68      IMPORT_FROM             9: FinalSectionNameLibrary
        70      STORE_NAME              9: FinalSectionNameLibrary
        72      POP_TOP                 
        74      LOAD_CONST              0: 0
        76      LOAD_CONST              5: ('Compiler',)
        78      IMPORT_NAME             10: Compiler
        80      IMPORT_FROM             10: Compiler
        82      STORE_NAME              10: Compiler
        84      POP_TOP                 
        86      LOAD_CONST              0: 0
        88      LOAD_CONST              6: ('*',)
        90      IMPORT_NAME             11: Settings
        92      IMPORT_STAR             
        94      LOAD_CONST              0: 0
        96      LOAD_CONST              7: ('SegmentManager',)
        98      IMPORT_NAME             12: SegmentManager
        100     IMPORT_FROM             12: SegmentManager
        102     STORE_NAME              12: SegmentManager
        104     POP_TOP                 
        106     LOAD_CONST              0: 0
        108     LOAD_CONST              8: ('Symbol',)
        110     IMPORT_NAME             13: Symbol
        112     IMPORT_FROM             13: Symbol
        114     STORE_NAME              13: Symbol
        116     POP_TOP                 
        118     LOAD_CONST              0: 0
        120     LOAD_CONST              9: ('chain',)
        122     IMPORT_NAME             14: itertools
        124     IMPORT_FROM             15: chain
        126     STORE_NAME              15: chain
        128     POP_TOP                 
        130     LOAD_CONST              0: 0
        132     LOAD_CONST              10: ('objdump',)
        134     IMPORT_NAME             16: BinUtils
        136     IMPORT_FROM             17: objdump
        138     STORE_NAME              17: objdump
        140     POP_TOP                 
        142     LOAD_CONST              0: 0
        144     LOAD_CONST              11: ('ceil',)
        146     IMPORT_NAME             18: math
        148     IMPORT_FROM             19: ceil
        150     STORE_NAME              19: ceil
        152     POP_TOP                 
        154     LOAD_CONST              12: 'IntermediateFiles\\Renamed'
        156     STORE_NAME              20: renamedCodesDir
        158     LOAD_CONST              13: 'IntermediateFiles\\Removed'
        160     STORE_NAME              21: removedConstructorsDir
        162     LOAD_CONST              14: 'Disassembly'
        164     STORE_NAME              22: disassemblyDir
        166     LOAD_CONST              1: None
        168     STORE_GLOBAL            23: symbolMapFile
        170     LOAD_NAME               8: File
        172     LOAD_NAME               24: __annotations__
        174     LOAD_CONST              15: 'symbolMapFile'
        176     STORE_SUBSCR            
        178     LOAD_CONST              56: (None, None, None, None)
        180     LOAD_CONST              16: <CODE> build
        182     LOAD_CONST              17: 'build'
        184     MAKE_FUNCTION           1
        186     STORE_NAME              25: build
        188     LOAD_NAME               5: LibraryDirectory
        190     LOAD_CONST              18: ('codesDirectory',)
        192     BUILD_CONST_KEY_MAP     1
        194     LOAD_CONST              19: <CODE> renameSections
        196     LOAD_CONST              20: 'renameSections'
        198     MAKE_FUNCTION           4
        200     STORE_NAME              26: renameSections
        202     LOAD_CONST              21: <CODE> makeCodesCPPFile
        204     LOAD_CONST              22: 'makeCodesCPPFile'
        206     MAKE_FUNCTION           0
        208     STORE_NAME              27: makeCodesCPPFile
        210     LOAD_CONST              23: <CODE> makeInitCPPFile
        212     LOAD_CONST              24: 'makeInitCPPFile'
        214     MAKE_FUNCTION           0
        216     STORE_NAME              28: makeInitCPPFile
        218     LOAD_NAME               6: Library
        220     LOAD_NAME               12: SegmentManager
        222     LOAD_CONST              25: ('library', 'segmentManager')
        224     BUILD_CONST_KEY_MAP     2
        226     LOAD_CONST              26: <CODE> getDebugInfo
        228     LOAD_CONST              27: 'getDebugInfo'
        230     MAKE_FUNCTION           4
        232     STORE_NAME              29: getDebugInfo
        234     LOAD_NAME               8: File
        236     LOAD_CONST              28: ('dest',)
        238     BUILD_CONST_KEY_MAP     1
        240     LOAD_CONST              29: <CODE> makeMap
        242     LOAD_CONST              30: 'makeMap'
        244     MAKE_FUNCTION           4
        246     STORE_NAME              30: makeMap
        248     LOAD_NAME               6: Library
        250     LOAD_NAME               31: list
        252     LOAD_CONST              31: ('compiledCodes', 'files')
        254     BUILD_CONST_KEY_MAP     2
        256     LOAD_CONST              32: <CODE> makeFilesFile
        258     LOAD_CONST              33: 'makeFilesFile'
        260     MAKE_FUNCTION           4
        262     STORE_NAME              32: makeFilesFile
        264     LOAD_NAME               6: Library
        266     LOAD_NAME               12: SegmentManager
        268     LOAD_CONST              34: ('linkedCodes', 'segmentList')
        270     BUILD_CONST_KEY_MAP     2
        272     LOAD_CONST              35: <CODE> extractFiles
        274     LOAD_CONST              36: 'extractFiles'
        276     MAKE_FUNCTION           4
        278     STORE_NAME              33: extractFiles
        280     LOAD_NAME               34: int
        282     LOAD_NAME               34: int
        284     LOAD_NAME               6: Library
        286     LOAD_NAME               12: SegmentManager
        288     LOAD_CONST              37: ('initializerInfoAddress', 'injectionsInfoAddress', 'compiledCodes', 'segmentManager')
        290     BUILD_CONST_KEY_MAP     4
        292     LOAD_CONST              38: <CODE> makeInitializerInfo
        294     LOAD_CONST              39: 'makeInitializerInfo'
        296     MAKE_FUNCTION           4
        298     STORE_NAME              35: makeInitializerInfo
        300     LOAD_NAME               12: SegmentManager
        302     LOAD_CONST              40: ('segmentManager',)
        304     BUILD_CONST_KEY_MAP     1
        306     LOAD_CONST              41: <CODE> makeMemoryHeapInfo
        308     LOAD_CONST              42: 'makeMemoryHeapInfo'
        310     MAKE_FUNCTION           4
        312     STORE_NAME              36: makeMemoryHeapInfo
        314     LOAD_NAME               6: Library
        316     LOAD_CONST              43: ('compiledCodes',)
        318     BUILD_CONST_KEY_MAP     1
        320     LOAD_CONST              44: <CODE> makeStartupsInfo
        322     LOAD_CONST              45: 'makeStartupsInfo'
        324     MAKE_FUNCTION           4
        326     STORE_NAME              37: makeStartupsInfo
        328     LOAD_CONST              46: <CODE> makeStringWriteInfo
        330     LOAD_CONST              47: 'makeStringWriteInfo'
        332     MAKE_FUNCTION           0
        334     STORE_NAME              38: makeStringWriteInfo
        336     LOAD_NAME               6: Library
        338     LOAD_CONST              43: ('compiledCodes',)
        340     BUILD_CONST_KEY_MAP     1
        342     LOAD_CONST              48: <CODE> makeDataWriteInfo
        344     LOAD_CONST              49: 'makeDataWriteInfo'
        346     MAKE_FUNCTION           4
        348     STORE_NAME              39: makeDataWriteInfo
        350     LOAD_NAME               6: Library
        352     LOAD_CONST              43: ('compiledCodes',)
        354     BUILD_CONST_KEY_MAP     1
        356     LOAD_CONST              50: <CODE> makeInjectionsInfo
        358     LOAD_CONST              51: 'makeInjectionsInfo'
        360     MAKE_FUNCTION           4
        362     STORE_NAME              40: makeInjectionsInfo
        364     LOAD_NAME               41: __name__
        366     LOAD_CONST              52: '__main__'
        368     COMPARE_OP              2 (==)
        370     POP_JUMP_IF_FALSE       406
        374     LOAD_CONST              53: <CODE> show_exception_and_exit
        376     LOAD_CONST              54: 'show_exception_and_exit'
        378     MAKE_FUNCTION           0
        380     STORE_NAME              42: show_exception_and_exit
        382     LOAD_NAME               42: show_exception_and_exit
        384     LOAD_NAME               0: sys
        386     STORE_ATTR              43: excepthook
        388     LOAD_NAME               25: build
        390     LOAD_NAME               0: sys
        392     LOAD_ATTR               44: argv
        394     LOAD_CONST              55: 1
        396     LOAD_CONST              1: None
        398     BUILD_SLICE             2
        400     BINARY_SUBSCR           
        402     CALL_FUNCTION_EX        0
        404     POP_TOP                 
        406     LOAD_CONST              1: None
        408     RETURN_VALUE            
